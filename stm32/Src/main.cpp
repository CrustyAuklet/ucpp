/**
 ******************************************************************************
 * @file    main.c
 * @author  Auto-generated by STM32CubeIDE
 * @version V1.0
 * @brief   Default main function.
 ******************************************************************************
 */

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
#warning                                                                                           \
    "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

#include "../../ucpp/register.hpp"
#include "../../ucpp/stm32/stm32f7.hpp"
#include "../../ucpp/strong_types.hpp"
#include <iostream>

int main(void)
{
    printf("hello\n");
    std::cout << ucpp::stm32::stm32f7.deviceSignature.flash_size << std::endl;
    int v = ucpp::stm32::stm32f7.deviceSignature.flash_size;
    int pkg = ucpp::stm32::stm32f7.deviceSignature.package.pkg;
    int p = ucpp::stm32::stm32f7.GPIOA.output_type.get<0>();
    ucpp::stm32::stm32f7.rcc.AHB1ENR.GPIOCEN = 1;
    ucpp::stm32::stm32f7.rcc.AHB1ENR.CRCEN = 1;
    int l = ucpp::stm32::stm32f7.rcc.AHB1ENR;
    int cd = 0;
    // int s = sizeof(ucpp::stm32::stm32f7);
    for (;;)
    {
        cd = ucpp::stm32::stm32f7.GPIOC.id.get<13>();
        cd = ucpp::stm32::stm32f7.GPIOC.id;
    }
}
